<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

dir = -1;
movespeed = 3;
grav = 0.2;
hsp = 0;
vsp = 0;
fearofheights = 0;
slopecontrol = 8;
slope_climb = 8;
jumpControl = 0;
point_value = 10;
ink_value = 20;
jumpspeed = 6;
range = 1024

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x,y+1,obj_wall)) vsp = -jumpspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;
if !global.death 
{
    if distance_to_point(obj_player.x,obj_player.y) &gt;= range exit;
}

if global.levelComplete 
{
    if (place_meeting(x,y,obj_player))
    {
    with (obj_player) 
    {
        if key_jump_hold &gt; 0
        {
            vsp = -jumpspeed;
        }
        else 
        {
            vsp = -jumpspeed * bounce;
        }
    }
        global.points += point_value
        global.ink_level += ink_value
        instance_destroy();
    }
exit;
}
///Movement
hsp = dir * (movespeed + global.enemyspeed);
if jumpControl
{
    if alarm_get(0) &lt;= 0 alarm_set(0,120)
    if (vsp &lt; 10) vsp += grav;
}
else vsp += grav;

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_spikes))
{
    while(!place_meeting(x+sign(hsp),y,obj_spikes))
    {
        x += sign(hsp);
    }
    hsp = 0;    
    dir *= -1;
}
else
{
if (place_meeting(x+hsp,y,obj_wall))
{
//Try to have the enemies be able to climb slopes
    if vsp = 0 &amp;&amp; (!place_meeting(x+hsp,y+slope_climb,obj_wall))
    {
        while(place_meeting(x,y-1,obj_wall))
        {
            y += -1;
        }
        vsp = 0;
    }
    else
    {
        while(!place_meeting(x+sign(hsp),y,obj_wall))
        {
            x += sign(hsp);
        }
        hsp = 0;    
        dir *= -1;
    }
}
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
    if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+slopecontrol, obj_wall)
    {
        dir *= -1;
    }    
}
y += vsp;

//Enemy Collision
if (place_meeting(x,y,obj_player))
{
    if (obj_player.y &lt; y-16)
    {
        with (obj_player) 
            {
                if key_jump_hold &gt; 0
                {
                    vsp = -jumpspeed;
                }
                else 
                {
                    vsp = -jumpspeed * bounce;
                }
            }
        global.points += point_value
        global.ink_level += ink_value
        instance_destroy();
    }
    else
    {
        scr_death();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while(place_meeting(x,y,obj_wall))
{
        y -= 1;
}
vsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
